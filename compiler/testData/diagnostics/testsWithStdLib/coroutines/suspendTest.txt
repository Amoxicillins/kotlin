package

@kotlin.test.Test /* = kotlin.test.IrrelevantClass */ public suspend fun test(): kotlin.Unit

public final class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    @kotlin.test.Test /* = kotlin.test.IrrelevantClass */ public final suspend fun test(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

package kotlin {

    package kotlin.test {

        public final annotation class IrrelevantClass : kotlin.Annotation {
            public constructor IrrelevantClass()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
        public typealias Test = kotlin.test.IrrelevantClass
    }
}
